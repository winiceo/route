{"version":3,"sources":["../../../app/controller/email.js"],"names":["_","require","validator","utility","uuid","module","exports","EmailController","ctx","service","config","email","trim","request","body","toLowerCase","ret","status","message","data","msg","isEmail","rd","helper","getRandomIntInclusive","mail","sendActiveMail","console","log","app","Controller"],"mappings":";;;;;;;;;;;;AACA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,YAAYD,QAAQ,WAAR,CAAlB;AACA,IAAME,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;;AAEAI,OAAOC,OAAP,GAAiB,eAAO;AAAA,QACdC,eADc;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIJC,uCAJI,GAIqB,IAJrB,CAIJA,GAJI,EAICC,OAJD,GAIqB,IAJrB,CAICA,OAJD,EAIUC,MAJV,GAIqB,IAJrB,CAIUA,MAJV;AAKNC,yCALM,GAKET,UAAUU,IAAV,CAAeJ,IAAIK,OAAJ,CAAYC,IAAZ,CAAiBH,KAAjB,IAA0B,EAAzC,EAA6CI,WAA7C,EALF;AAQNC,uCARM,GAQA;AACRC,gDAAQ,GADA;AAERC,iDAAS,EAFD;AAGRC,8CAAM;AAHE,qCARA;AAaRC,uCAbQ,GAaF,IAbE;AAcZ;;AAdY,wCAePlB,UAAUmB,OAAV,CAAkBV,KAAlB,CAfO;AAAA;AAAA;AAAA;;AAgBRS,0CAAM,QAAN;AACAZ,wCAAIS,MAAJ,GAAa,GAAb;AACAD,wCAAIE,OAAJ,GAAcE,GAAd;AACAZ,wCAAIM,IAAJ,GAAWE,GAAX;AAnBQ;;AAAA;AAuBNM,sCAvBM,GAuBDd,IAAIe,MAAJ,CAAWC,qBAAX,CAAiC,MAAjC,EAAyC,MAAzC,CAvBC;;AAyBZ;;AAzBY;AAAA,2CA0BNf,QAAQgB,IAAR,CAAaC,cAAb,CAA4Bf,KAA5B,EAAmCW,EAAnC,CA1BM;;AAAA;AA2BZK,4CAAQC,GAAR,CAAYN,EAAZ;AACAN,wCAAIC,MAAJ,GAAa,GAAb;AACAT,wCAAIM,IAAJ,GAAWE,GAAX;;AA7BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MACUa,IAAIC,UADd;;AAoCpB,WAAOvB,eAAP;AACH,CArCD","file":"email.js","sourcesContent":["\nconst _ = require('lodash');\nconst validator = require('validator');\nconst utility = require('utility');\nconst uuid = require('uuid');\n\nmodule.exports = app => {\n    class EmailController extends app.Controller {\n\n        async sendCaptcha() {\n            const { ctx, service, config } = this;\n            const email = validator.trim(ctx.request.body.email || '').toLowerCase();\n\n\n            const ret = {\n                status: 422,\n                message: '',\n                data: {}\n            };\n            let msg = null;\n            // 验证信息的正确性\n            if (!validator.isEmail(email)) {\n                msg = '邮箱不合法。';\n                ctx.status = 422;\n                ret.message = msg;\n                ctx.body = ret;\n                return;\n            }\n\n            const rd = ctx.helper.getRandomIntInclusive(999999, 100000);\n\n            // 发送激活邮件\n            await service.mail.sendActiveMail(email, rd);\n            console.log(rd);\n            ret.status = 200;\n            ctx.body = ret;\n        }\n\n\n\n    }\n\n    return EmailController;\n};"]}