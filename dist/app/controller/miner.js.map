{"version":3,"sources":["../../../app/controller/miner.js"],"names":["_","require","validator","utility","uuid","module","exports","MinerController","ctx","service","config","ret","status","message","data","uid","account","user_id","miner","getByUserId","assets","body","miner_id","params","request","query","page","parseInt","limit","offset","getSharesByMinerId","miner_shares","app","Controller"],"mappings":";;;;;;;;;;;;AACA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;AACA,IAAMC,YAAYD,QAAQ,WAAR,CAAlB;AACA,IAAME,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;;AAEAI,OAAOC,OAAP,GAAiB,eAAO;AAAA,QACdC,eADc;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIJC,uCAJI,GAIqB,IAJrB,CAIJA,GAJI,EAICC,OAJD,GAIqB,IAJrB,CAICA,OAJD,EAIUC,MAJV,GAIqB,IAJrB,CAIUA,MAJV;AAMNC,uCANM,GAMA;AACRC,gDAAQ,GADA;AAERC,iDAAS,EAFD;AAGRC,8CAAM;AAHE,qCANA;AAYNC,uCAZM,GAYAP,IAAIQ,OAAJ,CAAYC,OAZZ;AAAA;AAAA,2CAcSR,QAAQS,KAAR,CAAcC,WAAd,CAA0BJ,GAA1B,CAdT;;AAAA;AAcNK,0CAdM;;;AAgBZT,wCAAIG,IAAJ,GAAWM,MAAX;AACAZ,wCAAIa,IAAJ,GAAWV,GAAX;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBJH,uCAxBI,GAwBqB,IAxBrB,CAwBJA,GAxBI,EAwBCC,OAxBD,GAwBqB,IAxBrB,CAwBCA,OAxBD,EAwBUC,MAxBV,GAwBqB,IAxBrB,CAwBUA,MAxBV;AAyBNY,4CAzBM,GAyBKd,IAAIe,MAAJ,CAAWD,QAzBhB;AA0BNC,0CA1BM,GA0BGf,IAAIgB,OAAJ,CAAYC,KA1Bf;AA2BNC,wCA3BM,GA2BCC,SAASJ,OAAOG,IAAhB,KAAyB,CA3B1B;AA4BNE,yCA5BM,GA4BE,EA5BF;AA6BNC,0CA7BM,GA6BG,CAACH,OAAO,CAAR,IAAaE,KA7BhB;AA+BNjB,uCA/BM,GA+BA;AACRC,gDAAQ,GADA;AAERC,iDAAS,EAFD;AAGRC,8CAAM;AAHE,qCA/BA;AAAA;AAAA,2CAqCeL,QAAQS,KAAR,CAAcY,kBAAd,CAAiC,EAAER,UAAUA,QAAZ,EAAsBO,QAAQA,MAA9B,EAAsCD,OAAOA,KAA7C,EAAjC,CArCf;;AAAA;AAqCNG,gDArCM;;;AAwCZpB,wCAAIC,MAAJ,GAAa,GAAb;;AAEAD,wCAAIG,IAAJ,GAAWiB,YAAX;AACAvB,wCAAIa,IAAJ,GAAWV,GAAX;;AA3CY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MACUqB,IAAIC,UADd;;AAiDpB,WAAO1B,eAAP;AACH,CAlDD","file":"miner.js","sourcesContent":["\nconst _ = require('lodash');\nconst validator = require('validator');\nconst utility = require('utility');\nconst uuid = require('uuid');\n\nmodule.exports = app => {\n    class MinerController extends app.Controller {\n\n        async index() {\n            const { ctx, service, config } = this;\n\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n            const uid = ctx.account.user_id;\n\n            const assets = await service.miner.getByUserId(uid);\n\n            ret.data = assets;\n            ctx.body = ret;\n\n\n\n        }\n\n        async detail() {\n            const { ctx, service, config } = this;\n            const miner_id = ctx.params.miner_id;\n            const params = ctx.request.query;\n            const page = parseInt(params.page) || 1;\n            const limit = 20;\n            const offset = (page - 1) * limit;\n\n            const ret = {\n                status: 422,\n                message: '',\n                data: {}\n            };\n\n            const miner_shares = await service.miner.getSharesByMinerId({ miner_id: miner_id, offset: offset, limit: limit });\n\n\n            ret.status = 200;\n\n            ret.data = miner_shares;\n            ctx.body = ret;\n        }\n\n\n    }\n\n    return MinerController;\n};"]}