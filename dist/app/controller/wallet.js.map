{"version":3,"sources":["../../../app/controller/wallet.js"],"names":["_","require","validator","utility","uuid","module","exports","WalletController","ctx","service","config","ret","status","message","data","uid","account","user_id","asset","getByUserId","assets","body","coin_type","trim","request","toLowerCase","address","amount","String","captcha","console","log","withdraw","newAndSave","findAll","withdrawList","app","Controller"],"mappings":"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","file":"wallet.js","sourcesContent":["\nconst _ = require('lodash');\nconst validator = require('validator');\nconst utility = require('utility');\nconst uuid = require('uuid');\n\nmodule.exports = app => {\n    class WalletController extends app.Controller {\n\n        async assets() {\n            const { ctx, service, config } = this;\n\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n\n            ret.status = 200;\n\n            const uid = ctx.account.user_id;\n\n\n\n            const assets = await service.asset.getByUserId(uid);\n\n            ret.data = assets;\n            ctx.body = ret;\n        }\n\n        async withdraw() {\n            const { ctx, service, config } = this;\n            const coin_type = validator.trim(ctx.request.body.coin_type || '').toLowerCase();\n            const address = validator.trim(ctx.request.body.address || '');\n            const amount = validator.trim(String(ctx.request.body.amount) || '');\n            const captcha = validator.trim(String(ctx.request.body.captcha) || '');\n            const user_id = ctx.account.user_id;\n            console.log(ctx.account);\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n            const withdraw = await service.withdraw.newAndSave({\n                user_id: user_id,\n                coin_type: coin_type,\n                address: address,\n                amount: amount\n            });\n\n            ctx.body = ret;\n        }\n\n        async withdrawHistory() {\n            const { ctx, service, config } = this;\n\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n\n            const user_id = ctx.account.user_id;\n\n\n            const withdrawList = await service.withdraw.findAll({\n                user_id: user_id\n\n            });\n            ret.data = withdrawList;\n            ctx.body = ret;\n        }\n    }\n\n    return WalletController;\n};"]}