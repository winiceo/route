{"version":3,"sources":["../../../app/controller/wallet.js"],"names":["_","require","validator","utility","uuid","module","exports","WalletController","ctx","service","config","ret","status","message","data","uid","account","user_id","asset","getByUserId","assets","body","coin_type","trim","request","toLowerCase","address","amount","String","captcha","console","log","withdraw","newAndSave","findAll","withdrawList","app","Controller"],"mappings":"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","file":"wallet.js","sourcesContent":["\nconst _ = require('lodash');\nconst validator = require('validator');\nconst utility = require('utility');\nconst uuid = require('uuid');\n\nmodule.exports = app => {\n    class WalletController extends app.Controller {\n\n        async assets() {\n            const { ctx, service, config } = this;\n\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n\n            ret.status = 200;\n            const uid = ctx.account.user_id;\n\n            const assets = await service.asset.getByUserId(uid);\n\n            ret.data = assets;\n            ctx.body = ret;\n        }\n\n        async withdraw() {\n            const { ctx, service, config } = this;\n            const coin_type = validator.trim(ctx.request.body.coin_type || '').toLowerCase();\n            const address = validator.trim(ctx.request.body.address || '');\n            const amount = validator.trim(String(ctx.request.body.amount) || '');\n            const captcha = validator.trim(String(ctx.request.body.captcha) || '');\n            const user_id = ctx.account.user_id;\n            console.log(ctx.account);\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n            const withdraw = await service.withdraw.newAndSave({\n                user_id: user_id,\n                coin_type: coin_type,\n                address: address,\n                amount: amount\n            });\n\n            ctx.body = ret;\n        }\n\n        async withdrawHistory() {\n            const { ctx, service, config } = this;\n\n            const ret = {\n                status: 200,\n                message: '',\n                data: {}\n            };\n\n\n            const user_id = ctx.account.user_id;\n\n\n            const withdrawList = await service.withdraw.findAll({\n                user_id: user_id\n\n            });\n            ret.data = withdrawList;\n            ctx.body = ret;\n        }\n    }\n\n    return WalletController;\n};"]}