{"version":3,"sources":["../../../app/service/mail.js"],"names":["Service","require","sgMail","MailService","email","rd","app","mysql","query","results","get","data","config","logger","debug","setApiKey","mail_grid_opts","auth","api_key","i","send","info","error","Error","who","token","name","from","mail_opts","user","to","subject","html","String","saveCaptcha","sendMail","host","module","exports"],"mappings":";;;;;;;;;;;;AACA,IAAMA,UAAUC,QAAQ,KAAR,EAAeD,OAA/B;AACA;AACA;AACA;AACA,IAAME,SAASD,QAAQ,gBAAR,CAAf;;IAEME,W;;;;;;;;;;;;gGAEgBC,K,EAAOC,E;;;;;;;uCACC,KAAKC,GAAL,CAASC,KAAT,CAAeC,KAAf,CAAqB,2CAArB,EAAkE,CAACJ,KAAD,EAAQC,EAAR,CAAlE,C;;;AAAhBI,uC;iEAECA,O;;;;;;;;;;;;;;;;;;;kGAIML,K;;;;;;;uCACS,KAAKE,GAAL,CAASC,KAAT,CAAeG,GAAf,CAAmB,SAAnB,EAA8B,EAAEN,OAAOA,KAAT,EAA9B,C;;;AAAhBK,uC;kEACCA,O;;;;;;;;;;;;;;;;;;;kGAKIE,I;;;;;;AACHC,sC,GAAmB,I,CAAnBA,M,EAAQC,M,GAAW,I,CAAXA,M;;qCAEZD,OAAOE,K;;;;;;;;;AAIXZ,uCAAOa,SAAP,CAAiBH,OAAOI,cAAP,CAAsBC,IAAtB,CAA2BC,OAA5C;;AAESC,iC,GAAI,C;;;sCAAGA,IAAI,C;;;;;;;uCAENjB,OAAOkB,IAAP,CAAYT,IAAZ,C;;;AACNE,uCAAOQ,IAAP,CAAY,mBAAZ,EAAiCV,IAAjC;;;;;;;sCAGIQ,MAAM,C;;;;;AACNN,uCAAOS,KAAP,CAAa,yBAAb,gBAA6CX,IAA7C;sCACM,IAAIY,KAAJ,c;;;AAEVV,uCAAOS,KAAP,CAAa,iBAAb,gBAAqCX,IAArC;;;AAVeQ,mC;;;;;;;;;;;;;;;;;;;;;kGAeNK,G,EAAKC,K;;;;;;AACdb,sC,GAAW,I,CAAXA,M;AACFc,oC,GAAO,O;AACPC,oC,GAAUf,OAAOc,I,UAASd,OAAOgB,SAAP,CAAiBX,IAAjB,CAAsBY,I;AAChDC,kC,GAAKN,G;AACLO,uC,GAAUnB,OAAOc,IAAP,GAAc,M;AACxBM,oC,GAAOC,OAAO,eACxB,kBADwB,GAExB,MAFwB,GAEfR,KAFQ,IAGjB,UAHiB,GAGJb,OAAOc,IAHH,GAGU,kDAHV,GAIjB,KAJiB,GAITd,OAAOc,IAJE,GAIK,Y;;uCAEZ,KAAKQ,WAAL,CAAiBV,GAAjB,EAAsBC,KAAtB,C;;;;uCACA,KAAKU,QAAL,CAAc;AAChBR,8CADgB;AAEhBG,0CAFgB;AAGhBC,oDAHgB;AAIhBC;AAJgB,iCAAd,C;;;;;;;;;;;;;;;;;;;kGAScR,G,EAAKC,K,EAAOC,I;;;;;;AACxBd,sC,GAAW,I,CAAXA,M;AACFe,oC,GAAUf,OAAOc,I,UAASd,OAAOgB,SAAP,CAAiBX,IAAjB,CAAsBY,I;AAChDC,kC,GAAKN,G;AACLO,uC,GAAUnB,OAAOc,IAAP,GAAc,Q;AACxBM,oC,GAAO,WAAWN,IAAX,GAAkB,MAAlB,GACjB,WADiB,GACHd,OAAOc,IADJ,GACW,oCADX,GAEjB,WAFiB,GAEHd,OAAOwB,IAFJ,GAEW,kBAFX,GAEgCX,KAFhC,GAEwC,QAFxC,GAEmDC,IAFnD,GAE0D,cAF1D,GAGjB,UAHiB,GAGJd,OAAOc,IAHH,GAGU,oDAHV,GAIjB,KAJiB,GAITd,OAAOc,IAJE,GAIK,Y;;AAClB,qCAAKQ,WAAL,CAAiBJ,EAAjB,EAAqBL,KAArB;;uCACM,KAAKU,QAAL,CAAc;AAChBR,8CADgB;AAEhBG,0CAFgB;AAGhBC,oDAHgB;AAIhBC;AAJgB,iCAAd,C;;;;;;;;;;;;;;;;;;;EAzEYhC,O;;AAkF1BqC,OAAOC,OAAP,GAAiBnC,WAAjB","file":"mail.js","sourcesContent":["\nconst Service = require('egg').Service;\n//const mailer = require('nodemailer');\n// const smtpTransport = require('nodemailer-smtp-transport');\n// const sgTransport = require('nodemailer-sendgrid-transport');\nconst sgMail = require('@sendgrid/mail');\n\nclass MailService extends Service {\n\n    async saveCaptcha(email, rd) {\n        const results = await this.app.mysql.query('replace into captcha set email =? ,rd = ?', [email, rd]);\n\n        return results;\n\n    }\n\n    async getCaptcha(email) {\n        const results = await this.app.mysql.get('captcha', { email: email });\n        return results;\n\n    }\n\n\n    async sendMail(data) {\n        const { config, logger } = this;\n\n        if (config.debug) {\n            return;\n        }\n\n        sgMail.setApiKey(config.mail_grid_opts.auth.api_key);\n\n        for (let i = 1; i < 6; i++) {\n            try {\n                await sgMail.send(data);\n                logger.info('send mail success', data);\n                break;\n            } catch (err) {\n                if (i === 5) {\n                    logger.error('send mail finally error', err, data);\n                    throw new Error(err);\n                }\n                logger.error('send mail error', err, data);\n            }\n        }\n    }\n\n    async sendActiveMail(who, token) {\n        const { config } = this;\n        const name = 'miner';\n        const from = `${config.name} <${config.mail_opts.auth.user}>`;\n        const to = who;\n        const subject = config.name + '邮箱验证';\n        const html = String('<p>您好：</p>' +\n    '<p>您的邮箱验证码为：</p>' +\n    '验证码:' + token) +\n    '<p>若您没有在' + config.name + '填写过注册信息，说明有人滥用了您的电子邮箱，请删除此邮件，我们对给您造成的打扰感到抱歉。</p>' +\n    '<p>' + config.name + '社区 谨上。</p>';\n\n        await this.saveCaptcha(who, token);\n        await this.sendMail({\n            from,\n            to,\n            subject,\n            html\n        });\n    }\n\n\n    async sendResetPassMail(who, token, name) {\n        const { config } = this;\n        const from = `${config.name} <${config.mail_opts.auth.user}>`;\n        const to = who;\n        const subject = config.name + '社区密码重置';\n        const html = '<p>您好：' + name + '</p>' +\n    '<p>我们收到您在' + config.name + '社区重置密码的请求，请在24小时内单击下面的链接来重置密码：</p>' +\n    '<a href=\"' + config.host + '/reset_pass?key=' + token + '&name=' + name + '\">重置密码链接</a>' +\n    '<p>若您没有在' + config.name + '社区填写过注册信息，说明有人滥用了您的电子邮箱，请删除此邮件，我们对给您造成的打扰感到抱歉。</p>' +\n    '<p>' + config.name + '社区 谨上。</p>';\n        this.saveCaptcha(to, token);\n        await this.sendMail({\n            from,\n            to,\n            subject,\n            html\n        });\n    }\n}\n\nmodule.exports = MailService;\n\n"]}