{"version":3,"sources":["../../../app/service/miner.js"],"names":["Service","require","_","MinerService","user_id","app","mysql","select","where","assets","data","start","Promise","all","map","obj","miner_id","orders","limit","res","minerInfo","id","miner_alias","status","shares_1d","shares_1d_unit","earn_coin_1d","undefined","length","Object","assign","push","result","offset","ctx","uid","account","query","module","exports"],"mappings":";;;;;;;;;;;;AACA,IAAMA,UAAUC,QAAQ,KAAR,EAAeD,OAA/B;AACA,IAAME,IAAID,QAAQ,QAAR,CAAV;;IACME,Y;;;;;;;;;;;;iGAIgBC,O;;;;;;;;;uCAEO,KAAKC,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,OAAtB,EAA+B;AAChDC,2CAAO,EAAEJ,SAASA,OAAX;AADyC,iCAA/B,C;;;AAAfK,sC;AAIFC,oC,GAAO,E;;AAILC,qC;wGAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACJC,QAAQC,GAAR,CACFJ,OAAOK,GAAP;AAAA,gIAAW,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFACS,OAAKV,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,cAAtB,EAAsC;AAClDC,2FAAO,EAAEQ,UAAUD,IAAIC,QAAhB,EAD2C;AAElDC,4FAAQ,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD,CAF0C;AAGlDC,2FAAO;AAH2C,iFAAtC,CADT;;AAAA;AACHC,mFADG;AAMHC,yFANG,GAMS;AACZC,wFAAIN,IAAIM,EADI;AAEZL,8FAAUD,IAAIC,QAFF;AAGZM,iGAAaP,IAAIO,WAHL;AAIZC,4FAAQJ,IAAII,MAJA;AAKZC,+FAAWL,IAAIK,SALH;AAMZC,oGAAgBN,IAAIM,cANR;AAOZC,kGAAcP,IAAIO;AAPN,iFANT;;AAeP,oFAAIP,QAAQQ,SAAR,IAAqBR,IAAIS,MAAJ,IAAc,CAAvC,EAA0C;AACtCT,0FAAMA,IAAI,CAAJ,CAAN;AACAC,gGAAYS,OAAOC,MAAP,CAAcV,SAAd,EAAyB;AACjCG,gGAAQ,CADyB;AAEjCC,mGAAWL,IAAIK,SAFkB;AAGjCC,wGAAgBN,IAAIM,cAHa;AAIjCC,sGAAcP,IAAIO;AAJe,qFAAzB,CAAZ;AAMH,iFARD,MAQO;AACHN,gGAAYS,OAAOC,MAAP,CAAcV,SAAd,EAAyB;AACjCG,gGAAQ,CADyB;AAEjCC,mGAAW,CAFsB;AAGjCC,wGAAgB,GAHiB;AAIjCC,sGAAc;AAJmB,qFAAzB,CAAZ;AAMH;AACDhB,qFAAKqB,IAAL,CAAUX,SAAV;;AA/BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAX;;AAAA;AAAA;AAAA;AAAA,4DADE,CADI;;AAAA;AAAA,0FAsCHV,IAtCG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qC;;oDAARC,K;;;;;AAwCAqB,sC,GAASrB,O;kEACRqB,M;;;;;;;;;;;;;;;;;;;;oBAMgBhB,Q,SAAAA,Q;yCAAUiB,M;oBAAAA,M,gCAAS,C;wCAAGf,K;oBAAAA,K,+BAAQ,E;;;;;;AAC7CgB,mC,GAAQ,I,CAARA,G;AAEFC,mC,GAAMD,IAAIE,OAAJ,CAAYhC,O;AAEpBiC,qC,GAAQ;AACR7B,2CAAO,EAAEJ,SAAS+B,GAAX,EADC;AAERlB,4CAAQ,CAAC,CAAC,UAAD,EAAa,MAAb,CAAD,CAFA,EAEwB;AAChCC,2CAAOA,KAHC,EAGM;AACde,4CAAQA,MAJA,CAIO;AAJP,iC;;AAMZ,oCAAIjB,YAAY,CAAhB,EAAmB;AACfqB,0CAAM7B,KAAN,GAAc,EAAEQ,UAAUA,QAAZ,EAAd;AACH;;uCACoB,KAAKX,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,cAAtB,EAAsC8B,KAAtC,C;;;AAAf5B,sC;kEACCA,M;;;;;;;;;;;;;;;;;;;EA5EYT,O;;AAmF3BsC,OAAOC,OAAP,GAAiBpC,YAAjB","file":"miner.js","sourcesContent":["\nconst Service = require('egg').Service;\nconst _ = require('lodash');\nclass MinerService extends Service {\n\n\n\n    async getByUserId(user_id) {\n\n        const assets = await this.app.mysql.select('miner', {\n            where: { user_id: user_id }\n        });\n\n        let data = [];\n\n\n\n        const start = async () => {\n            await Promise.all(\n                assets.map(async obj => {\n                    let res = await this.app.mysql.select('miner_shares', {\n                        where: { miner_id: obj.miner_id },\n                        orders: [['id', 'desc']],\n                        limit: 1\n                    });\n                    let minerInfo = {\n                        id: obj.id,\n                        miner_id: obj.miner_id,\n                        miner_alias: obj.miner_alias,\n                        status: res.status,\n                        shares_1d: res.shares_1d,\n                        shares_1d_unit: res.shares_1d_unit,\n                        earn_coin_1d: res.earn_coin_1d\n                    };\n                    if (res !== undefined && res.length == 1) {\n                        res = res[0];\n                        minerInfo = Object.assign(minerInfo, {\n                            status: 1,\n                            shares_1d: res.shares_1d,\n                            shares_1d_unit: res.shares_1d_unit,\n                            earn_coin_1d: res.earn_coin_1d\n                        });\n                    } else {\n                        minerInfo = Object.assign(minerInfo, {\n                            status: 0,\n                            shares_1d: 0,\n                            shares_1d_unit: 'T',\n                            earn_coin_1d: 0\n                        });\n                    }\n                    data.push(minerInfo);\n\n                })\n            );\n\n            return data;\n        };\n        const result = start();\n        return result;\n\n\n    }\n\n\n    async getSharesByMinerId({ miner_id, offset = 0, limit = 20 }) {\n        const { ctx } = this;\n\n        const uid = ctx.account.user_id;\n\n        let query = {\n            where: { user_id: uid },\n            orders: [['datetime', 'desc']], // 排序方式\n            limit: limit, // 返回数据量\n            offset: offset // 数据偏移量\n        };\n        if (miner_id != 0) {\n            query.where = { miner_id: miner_id };\n        }\n        const assets = await this.app.mysql.select('miner_shares', query);\n        return assets;\n    }\n\n\n\n}\n\nmodule.exports = MinerService;\n"]}