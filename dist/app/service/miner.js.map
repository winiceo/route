{"version":3,"sources":["../../../app/service/miner.js"],"names":["Service","require","_","MinerService","user_id","app","mysql","select","where","assets","data","start","Promise","all","map","obj","miner_id","orders","limit","res","minerInfo","id","miner_alias","status","shares_1d","shares_1d_unit","earn_coin_1d","push","result","offset","ctx","uid","account","query","module","exports"],"mappings":";;;;;;;;;;;;AACA,IAAMA,UAAUC,QAAQ,KAAR,EAAeD,OAA/B;AACA,IAAME,IAAID,QAAQ,QAAR,CAAV;;IACME,Y;;;;;;;;;;;;iGAIgBC,O;;;;;;;;;uCAEO,KAAKC,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,OAAtB,EAA+B;AAChDC,2CAAO,EAAEJ,SAASA,OAAX;AADyC,iCAA/B,C;;;AAAfK,sC;AAIFC,oC,GAAO,E;;AAILC,qC;wGAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACJC,QAAQC,GAAR,CACFJ,OAAOK,GAAP;AAAA,gIAAW,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFACS,OAAKV,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,cAAtB,EAAsC;AAClDC,2FAAO,EAAEQ,UAAUD,IAAIC,QAAhB,EAD2C;AAElDC,4FAAQ,CAAC,CAAC,IAAD,EAAO,MAAP,CAAD,CAF0C;AAGlDC,2FAAO;AAH2C,iFAAtC,CADT;;AAAA;AACHC,mFADG;;AAMP,oFAAIA,GAAJ,EAAS;AACLA,0FAAMA,IAAI,CAAJ,CAAN;AACIC,6FAFC,GAEW;AACZC,4FAAIN,IAAIM,EADI;AAEZL,kGAAUD,IAAIC,QAFF;AAGZM,qGAAaP,IAAIO,WAHL;AAIZC,gGAAQJ,IAAII,MAJA;AAKZC,mGAAWL,IAAIK,SALH;AAMZC,wGAAgBN,IAAIM,cANR;AAOZC,sGAAcP,IAAIO;AAPN,qFAFX;;AAWLhB,yFAAKiB,IAAL,CAAUP,SAAV;AAEH;;AAnBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAX;;AAAA;AAAA;AAAA;AAAA,4DADE,CADI;;AAAA;AAAA,0FA0BHV,IA1BG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qC;;oDAARC,K;;;;;AA4BAiB,sC,GAASjB,O;kEACRiB,M;;;;;;;;;;;;;;;;;;;;oBAMgBZ,Q,SAAAA,Q;yCAAUa,M;oBAAAA,M,gCAAS,C;wCAAGX,K;oBAAAA,K,+BAAQ,E;;;;;;AAC7CY,mC,GAAQ,I,CAARA,G;AAEFC,mC,GAAMD,IAAIE,OAAJ,CAAY5B,O;AAEpB6B,qC,GAAQ;AACRzB,2CAAO,EAAEJ,SAAS2B,GAAX,EADC;AAERd,4CAAQ,CAAC,CAAC,UAAD,EAAa,MAAb,CAAD,CAFA,EAEwB;AAChCC,2CAAOA,KAHC,EAGM;AACdW,4CAAQA,MAJA,CAIO;AAJP,iC;;AAMZ,oCAAIb,YAAY,CAAhB,EAAmB;AACfiB,0CAAMzB,KAAN,GAAc,EAAEQ,UAAUA,QAAZ,EAAd;AACH;;uCACoB,KAAKX,GAAL,CAASC,KAAT,CAAeC,MAAf,CAAsB,cAAtB,EAAsC0B,KAAtC,C;;;AAAfxB,sC;kEACCA,M;;;;;;;;;;;;;;;;;;;EAhEYT,O;;AAuE3BkC,OAAOC,OAAP,GAAiBhC,YAAjB","file":"miner.js","sourcesContent":["\nconst Service = require('egg').Service;\nconst _ = require('lodash');\nclass MinerService extends Service {\n\n\n\n    async getByUserId(user_id) {\n\n        const assets = await this.app.mysql.select('miner', {\n            where: { user_id: user_id }\n        });\n\n        let data = [];\n\n\n\n        const start = async () => {\n            await Promise.all(\n                assets.map(async obj => {\n                    let res = await this.app.mysql.select('miner_shares', {\n                        where: { miner_id: obj.miner_id },\n                        orders: [['id', 'desc']],\n                        limit: 1\n                    });\n                    if (res) {\n                        res = res[0];\n                        let minerInfo = {\n                            id: obj.id,\n                            miner_id: obj.miner_id,\n                            miner_alias: obj.miner_alias,\n                            status: res.status,\n                            shares_1d: res.shares_1d,\n                            shares_1d_unit: res.shares_1d_unit,\n                            earn_coin_1d: res.earn_coin_1d\n                        };\n                        data.push(minerInfo);\n\n                    }\n\n                })\n            );\n\n            return data;\n        };\n        const result = start();\n        return result;\n\n\n    }\n\n\n    async getSharesByMinerId({ miner_id, offset = 0, limit = 20 }) {\n        const { ctx } = this;\n\n        const uid = ctx.account.user_id;\n\n        let query = {\n            where: { user_id: uid },\n            orders: [['datetime', 'desc']], // 排序方式\n            limit: limit, // 返回数据量\n            offset: offset // 数据偏移量\n        };\n        if (miner_id != 0) {\n            query.where = { miner_id: miner_id };\n        }\n        const assets = await this.app.mysql.select('miner_shares', query);\n        return assets;\n    }\n\n\n\n}\n\nmodule.exports = MinerService;\n"]}